on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  slackNotification:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Send test report to Slack
        uses: Ilshidur/action-slack@master
        with:
          args: |
            Hola, las pruebas de estres con Lirmi en Pre ya empezaron  a correr, en unos minutos veran el resultado en este mismo canal  
          # file: captura.png
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  jmeter-lirmi-test:
    strategy:
      matrix:
        ejecuciones: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    runs-on: ubuntu-latest
    needs: slackNotification
    container:
      image: justb4/jmeter:latest

    steps:
      - uses: actions/checkout@v4
      - name: Ejecutar pruebas JMeter
        run: |
          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
          jmeter -g resultados.jtl -e -o report_folder

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-${{ github.run_number }}-${{ matrix.ejecuciones }}
          path: | 
            resultados.jtl
            report_folder
            resultados.csv
  slackNotification_2:
    name: Notificación en Slack
    runs-on: ubuntu-latest
    needs: [jmeter-lirmi-test]
    steps:
      - uses: actions/checkout@v2
      - name: Notificación en Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          # SLACK_MESSAGE: 'Resultado de la prueba'
          SLACK_TITLE: Resultados de la Prueba
    # jmmeter-lirmi-test-2:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

  # jmeter-lirmi-test-3:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

  # jmeter-lirmi-test-4:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder
   
  # jmeter-lirmi-test-5:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder
  
  # jmeter-lirmi-test-6:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

  # jmeter-lirmi-test-7:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder
 
  # jmeter-lirmi-test-8:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

  # jmeter-lirmi-test-9:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

 
  # jmeter-lirmi-test-10:
  #     runs-on: ubuntu-latest
  #     # strategy:
  #     #  matrix:
  #     #    os: [ubuntu-latest, macos-latest]

  #     container:
  #      image: justb4/jmeter:latest

  #     steps:
  #      - uses: actions/checkout@v4

  #      - name: Ejecutar pruebas JMeter 
  #        run: |
  #          jmeter -n -t jmeter/HTTP_Request.jmx -l resultados.jtl
  #          jmeter -g resultados.jtl -e -o report_folder

 # - name: Generar archivo CSV desde JTL
       #   run: |
       #     echo "timestamp,elapsed,label,responseCode,responseMessage,success,bytes,grpThreads,allThreads,Latency" > resultados.csv
       #     awk -F',' '{print $1","$2","$3","$4","$5","$6","$7","$8","$9","$10}' resultados.jtl >> resultados.csv
       # - name: Subir archivos de resultados
       #   uses: actions/upload-artifact@v4
       #   with:
       #     name: lirmi_report
       #     path: |
       #       resultados.jtl
       #       report_folder
       #       resultados.csv



#   run-tests:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Run tests
#         run: |
#           # Comandos para ejecutar pruebas
#           echo "Ejecutando pruebas en ${{ matrix.os }}..."

#   notify-slack:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Send test report to Slack
#         uses: Ilshidur/action-slack@master
#         with:
#           args: |
#             Hola, les envio el reporte de paros para hoy:
#             https://www.infobae.com/tag/paro-de-colectivos/
#           file: captura.png
#     env:
#       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
