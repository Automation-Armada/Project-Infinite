on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  jmeter-lirmi-test:
    runs-on: ubuntu-latest
     # strategy:
     #  matrix:
     #    os: [ubuntu-latest, macos-latest]

    container:
       image: justb4/jmeter:latest

    steps:
       - uses: actions/checkout@v4

       # - name: instalar pluginss JMeter 
       #   run: |
       #     jmeter -n -t jmeter/Example 500 threads.jmx -l resultados.jtl
       #     jmeter -g resultados.jtl -e -o report_folder
            
        # curl -O https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-manager/1.6/jmeter-plugins-manager-1.6.jar
       - name: ejecutar pruebas jmeter
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

  jmeter-lirmi-test-2:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

  jmeter-lirmi-test-3:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

  jmeter-lirmi-test-4:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder
   
  jmeter-lirmi-test-5:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder
  
  jmeter-lirmi-test-6:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

  jmeter-lirmi-test-7:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder
 
  jmeter-lirmi-test-8:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

  jmeter-lirmi-test-9:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

 
  jmeter-lirmi-test-10:
      runs-on: ubuntu-latest
      # strategy:
      #  matrix:
      #    os: [ubuntu-latest, macos-latest]

      container:
       image: justb4/jmeter:latest

      steps:
       - uses: actions/checkout@v4

       - name: Ejecutar pruebas JMeter 
         run: |
           jmeter -n -t jmeter/Thread_Group.jmx -l resultados.jtl
           jmeter -g resultados.jtl -e -o report_folder

 # - name: Generar archivo CSV desde JTL
       #   run: |
       #     echo "timestamp,elapsed,label,responseCode,responseMessage,success,bytes,grpThreads,allThreads,Latency" > resultados.csv
       #     awk -F',' '{print $1","$2","$3","$4","$5","$6","$7","$8","$9","$10}' resultados.jtl >> resultados.csv
       # - name: Subir archivos de resultados
       #   uses: actions/upload-artifact@v4
       #   with:
       #     name: lirmi_report
       #     path: |
       #       resultados.jtl
       #       report_folder
       #       resultados.csv



#   run-tests:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Run tests
#         run: |
#           # Comandos para ejecutar pruebas
#           echo "Ejecutando pruebas en ${{ matrix.os }}..."

#   notify-slack:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Send test report to Slack
#         uses: Ilshidur/action-slack@master
#         with:
#           args: |
#             Hola, les envio el reporte de paros para hoy:
#             https://www.infobae.com/tag/paro-de-colectivos/
#           file: captura.png
#     env:
#       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
