on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install dependencies
        run: npm install

      - name: Cache Playwright dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/playwright.config.js') }}
          restore-keys: |
            ${{ runner.os }}-playwright-
      - name: Install Playwright
        run: npx playwright install

      - name: Run Infinite tests
        run: npm run test

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-${{ matrix.os }}
          path: |
            ./assets
            ./features
            ./test-result
            ./test-results
            index.html

  send-slack-message:
    runs-on: ubuntu-latest
    needs: [test]  # Espera a que termine el trabajo 'test'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Download test report artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: test-report-ubuntu-latest  # Reemplaza con el nombre correcto según la matriz de tu trabajo 'test'
      #     path: ./artifacts  # Ruta donde se descargará el artifact

      - name: Send Slack message
        uses: Ilshidur/action-slack@master
        with:
          args: |
            Hola chicos, envío los resultados del pipeline
          attachments: |
            [
              {
                "fallback": "Download the full report",
                "actions": [
                  {
                    "type": "button",
                    "text": "Download Full Report",
                    "url": "https://github.com/armadaautomationteam/Project-Infinite/actions"
                  }
                ]
              }
            ]
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
