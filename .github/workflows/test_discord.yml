name: Test Discord

on:
  push:
    branches:
      - master  

jobs:
  enviar-mensaje:
    runs-on: ubuntu-latest

    steps:
      - name: Instalar Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17' 

     # - name: Inicializar módulo Go
     #   run: go mod init nombre-del-modulo

      - name: Ejecutar go test y guardar resultado
        id: paso1
        run: |
          go test ./... > paso1_output.txt 2>&1 || true
          cat paso1_output.txt

      - name: Guardar archivo como artefacto
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: all_steps_output
          path: paso1_output.txt

      - name: Descargar artefacto
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: all_steps_output
          
      - name: Leer contenido del archivo
        id: leer-archivo
        run: |
          contenido=$(cat paso1_output.txt)
          echo "::set-output name=contenido::$contenido"

      - name: Identificar errores y advertencias
        id: identificar-errores
        run: |
          contenido=$(cat paso1_output.txt)
          if echo "$contenido" | grep -q '^go: warning:'; then
            echo "::set-output name=advertencia::true"
          elif echo "$contenido" | grep -q '^go:' && ! echo "$contenido" | grep -q '^go: warning:'; then
            echo "::set-output name=error::true"
          else
            echo "::set-output name=advertencia::false"
          fi

      - name: Enviar mensaje a Discord
        if: always()
        run: |
          contenido="${{ steps.leer-archivo.outputs.contenido }}"
          if [[ "${{ steps.identificar-errores.outputs.error }}" == "true" ]]; then
            mensaje="¡Se encontraron errores!"
            color="16711680" # Rojo para errores
          elif [[ "${{ steps.identificar-errores.outputs.advertencia }}" == "true" ]]; then
            mensaje="¡Advertencia encontrada!"
            color="16776960" # Amarillo para advertencias
          else
            mensaje=""
            color=""
          fi
          if [[ "$mensaje" != "" ]]; then
            message="{\"username\": \"GitHub Actions\", \"avatar_url\": \"https://github.com/github.png\", \"embeds\": [{\"title\": \"$mensaje\", \"description\": \"$contenido\", \"color\": $color}]}"
            curl -X POST -H 'Content-Type: application/json' -d "$message" https://discord.com/api/webhooks/1247924987877392495/EC0Ahcm-VSjZA21AfPAM0DrE2qha9iiCvClGEHjZNyk7U_abysiEPrbnhT4jaOtKqlMZ
          fi

      - name: Run script
        run: |
          DISCORD_WEBHOOK="${{ secrets.DISCORD_WEBHOOK }}"
          PHOTO_FILE="./paso1_output.txt"  
          CHANNEL_ID="1247931364507123845"   
          message="**Errores:**"
          curl -X POST -F "file=@$PHOTO_FILE" -F "content=$message" -F "tts=false" -F "embeds=[{\"color\":16711680,\"description\":\"Mensaje de errores aquí\"}]" "$DISCORD_WEBHOOK"
